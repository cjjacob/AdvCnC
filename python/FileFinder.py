# to get files from /eos/

import os
import subprocess

eosBase = "/eos/cms/store/data/"

Run2016 = dict()
Run2016["Sep16"] = [("Run2016B/","-v1"), ("Run2016B/","-v2"), ("Run2016B/","-v3"), ("Run2016C/","-v1"), ("Run2016D/","-v1"), ("Run2016E/","-v1"), ("Run2016F/","-v1"), ("Run2016G/","-v1")]
Run2016["Feb17"] = [("Run2016B/","_ver2-v2"), ("Run2016C/","-v1"), ("Run2016D/","-v1"), ("Run2016E/","-v1"), ("Run2016F/","-v1"), ("Run2016G/","_ver2-v1"), ("Run2016G/","_ver3-v1")]
Run2016["Apr17"] = [("Run2016B/","_ver2-v1"), ("Run2016C/","-v1"), ("Run2016D/","-v1"), ("Run2016E/","-v1"), ("Run2016F/","-v1"), ("Run2016G/","-v1")]

subdirBase = dict()
subdirBase["Sep16"] = "DoubleEG/MINIAOD/23Sep2016"
subdirBase["Feb17"] = "DoubleEG/MINIAOD/03Feb2017"
subdirBase["Apr17"] = "DoubleEG/MINIAOD/18Apr2017"

outputBase = "root://eoscms.cern.ch//eos/cms/store/data/"

def find(dataDirs, rereco):
    out = []
    for dDirTup in dataDirs[rereco]:
        #already_printed = False
        dDir, ver = dDirTup
        basePath = eosBase + dDir + subdirBase[rereco] + ver
        for subdir, dirs, files in os.walk(basePath):
#            print "Searching " + subdir + " ..."
            for f in files:
                if f.endswith(".root"):
                    filePath = subdir + os.sep + f
                    for_cff = outputBase + filePath[len(eosBase):]
                    out.append(for_cff)
                    #if not already_printed:
                        #already_printed = True
                        #print for_cff
    return out

def outputROOT(dataFiles):
    with open("ROOTfiles_cff.py", "w") as outfile:
        outfile.write("# This file was generated by FileFinder.py\n\n")
        outfile.write("import FWCore.ParameterSet.Config as cms\n\n")
        for rereco in dataFiles:
            outfile.write("Run2016"+rereco+"ReReco = cms.untracked.PSet(\n")
            outfile.write("\tfiles = cms.untracked.vstring( *(\n")
            for df in dataFiles[rereco]:
                outfile.write("\t\t\"" + df + "\",\n") # "filename.root",\n
            outfile.write("\t) )\n")
            outfile.write(")\n\n")
    return

def main():
    #print find([("Run2016B/","3")])
    rootFiles = dict()
    for rereco in Run2016:
        print "Searching for %s files... " % (rereco),
        rootFiles[rereco] = find(Run2016, rereco)
        print "Found %d files" % len(rootFiles[rereco])
    outputROOT(rootFiles)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print "Keyboard Interrupt"
